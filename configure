#!/bin/sh
set -e

. ./auto/cmake

CUDA_HOME=/usr/local/cuda

HAVE_CUDA=0
if [ -f $CUDA_HOME/include/cuda_runtime.h ]; then
    HAVE_CUDA=1
fi

ENABLE_CUDA=${HAVE_CUDA}

parse_args() {
    for i in "$@"; do
        case $i in
        --enable-trace)
            ENABLE_TRACE=1
            ;;
        *)
            echo "unknown argument $i"
            exit 1
            ;;
        esac
    done
}

config() {
    PYTHON=$(which python3)
    mkdir -p srcs/cmake/generated
    $PYTHON ./srcs/config/config.py >srcs/cmake/generated/torch.cmake
    cat srcs/cmake/generated/torch.cmake
}

add_cmake_prefixes() {
    add_cmake_prefix $HOME/local/gtest
}

add_cmake_flags() {
    if [ ${ENABLE_CUDA} -eq 1 ]; then
        add_cmake_flag ENABLE_CUDA ${ENABLE_CUDA}
        add_cmake_flag CUDA_TOOLKIT_ROOT_DIR $CUDA_HOME
        add_cmake_flag CMAKE_CUDA_COMPILER $CUDA_HOME/bin/nvcc
    fi
    add_cmake_flag BUILD_TORCH_EXTENSION 1
    add_cmake_flag BUILD_TESTS 1
    add_cmake_flag BUILD_BENCHMARKS 1
    add_cmake_flag CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH}

    add_cmake_flag QUIVER_ENABLE_TRACE $ENABLE_TRACE
}

main() {
    config
    parse_args $@
    config_cmake
}

main $@
